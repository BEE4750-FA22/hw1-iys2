---
title: "BEE 4750/5750 Homework 1"
author: "Ian Shen-Costello (iys2)"
date: `j import Dates; Dates.Date(Dates.now())`
weave_options:
    term: true
    cache: off
    md2pdf:
        template: "bee4750pdf.tpl"
    md2html:
        template: "bee4750html.tpl"
---

<!-- This setups the environment and installs packages, but doesn't appear in the generated document -->
<!-- You shouldn't need to modify this -->
```julia; echo = false; results = "hidden"
using Pkg
Pkg.activate(dirname(@__FILE__))
Pkg.instantiate()
```

# Problem 1

## Problem 1.1

```julia
using GraphRecipes, Plots

A = [0 1 1 1;
		 0 0 0 1;
		 0 0 0 1;
   	 	 0 0 0 0]
	
names = ["Cheap", "Land Treatment", "Chem Treatment", "Pristine Brook"]
shapes=[:hexagon, :rect, :rect, :hexagon]
xpos = [0, -1, -0.25, 1]
ypos = [1, 0, 0, -1]

graphplot(A, names=names, markersize=0.15, markershapes=shapes, markercolor=:white, x=xpos, y=ypos)

```

## Problem 1.2

## Problem 1.3

```julia
	function yuk(x1, x2)
		cost = (x1^2)/20 + 1.5*x2
		if cost < 0
			cost = 0 
		end
		conc = 100 - x1*0.8 - x2*(1-x2*0.005)

		return cost, conc
	end
```

## Problem 1.4
```julia
using Plots

#Initialize arrays
conc = zeros(5151)
cost = zeros(5151)

#Initialize index
count = 1

for i = 0:100
	for j = 0:100-i
		conc[count] = yuk(i , j)[2]
		cost[count] = yuk(i, j)[1]
		count = count+1
	end
end

#Plot cost vs. conc showing regulation cutoff
scatter(cost,conc,title = "Cost vs. Concentration per Day", label = "Treatment Plans")
hline!([20], width = 3,label = "Regulation")
xlabel!("Cost (Dollars)")
ylabel!("Concentration (kg/day)")

conc_new = []
cost_new =[]
for i = 1:length(conc)
	if conc[i] <= 20
		append!( conc_new, conc[i] )
		append!( cost_new, cost[i] )
	end
end

scatter(cost_new,conc_new)

conc[60]
```
## Problem 1.5

## Problem 1.6

## Problem 1.7

# References
